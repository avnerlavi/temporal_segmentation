root = getenv('TemporalSegmentation');
addpath(genpath([root,'/utils']));

elevationHalfAngle = 90;
resizeFactors = [1,1,1];

videoNames = {
    'movingDot.avi', ...
    'movingDot_blink.avi', ...
    'movingDot_dilate.avi', ...
    'movingDot_dilate2D.avi', ...
    'movingDot_dilate_diff.avi', ...
    'movingLine.avi', ...
    'movingLine_blink.avi', ...
    'movingLine_dotted.avi', ...
    'movingLine_full.avi', ...
    'movingLine_wide.avi', ...
    'sinusoidalDot.avi', ...
    'sinusoidalDot_dilate2D.avi', ...
    'verticalLine.avi', ...
    'verticalLine_blink.avi', ...
    'verticalLine_dotted.avi'
    };

for member = videoNames
    videoName = member{1};
    videoPath = [root, '\resources\ImpulseCheckingVids\', videoName];
    videoName = videoName(1: end-4);
    resultsDir = [root, '\results\ImpulseCheckingVids\', videoName];
    mkdir(resultsDir);
    disp(['Start ', videoName, ' ', datestr(datetime('now'),'HH:MM:SS')]);
    %%
    CCLFParams = struct;
    CCLFParams.numOfScales = 1;
    CCLFParams.elevationHalfAngle = atand(tand(elevationHalfAngle) * resizeFactors(1) / resizeFactors(3));
    CCLFParams.azimuthNum = 72;
    CCLFParams.elevationNum = 19;
    CCLFParams.activationThreshold = 0.03; %for running man - 0.3
    CCLFParams.facilitationLength = 16;
    CCLFParams.alpha = 0;
    CCLFParams.m1 = 1;
    CCLFParams.m2 = 1;
    
    vid_matrix = readVideoFromFile(videoPath, false);
    vid_matrix = safeResize(vid_matrix, resizeFactors.*size(vid_matrix));
    vid_matrix = vid_matrix-0.5;
    
    detail_enhanced = ...
        computeCombinedLF_IN3D(vid_matrix, ...
        CCLFParams.azimuthNum, ...
        CCLFParams.elevationNum, ...
        CCLFParams.elevationHalfAngle, ...
        CCLFParams.numOfScales , ...
        CCLFParams.activationThreshold, ...
        CCLFParams.facilitationLength, ...
        CCLFParams.alpha, ...
        CCLFParams.m1, ...
        CCLFParams.m2,  ...
        resultsDir ...
        );
    
    vidOut = abs(detail_enhanced);
    minVideoValue = min(detail_enhanced(:));
    maxVideoValue = max(detail_enhanced(:));
    disp(['Done ', videoName, ' ', datestr(datetime('now'),'HH:MM:SS')]);
    
    writeVideoToFile(minMaxNorm(detail_enhanced), ...
        'movie_detail_enhanced_3d_minmax', resultsDir);
    writeVideoToFile(abs(detail_enhanced), ...
        'movie_detail_enhanced_3d_abs', resultsDir);
    saveParams(resultsDir, ...
        generatePyrFlag, videoPath, resizeFactors, elevationHalfAngle, CCLFParams, ...
        minVideoValue, maxVideoValue);
    
end

